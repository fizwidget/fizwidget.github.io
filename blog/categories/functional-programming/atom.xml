<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Functional Programming | OnCode]]></title>
  <link href="http://fizwidget.github.io/blog/categories/functional-programming/atom.xml" rel="self"/>
  <link href="http://fizwidget.github.io/"/>
  <updated>2014-07-03T17:50:42+09:30</updated>
  <id>http://fizwidget.github.io/</id>
  <author>
    <name><![CDATA[James Russell]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[A List Made of Functions]]></title>
    <link href="http://fizwidget.github.io/blog/2014/07/03/a-list-made-of-functions/"/>
    <updated>2014-07-03T16:59:34+09:30</updated>
    <id>http://fizwidget.github.io/blog/2014/07/03/a-list-made-of-functions</id>
    <content type="html"><![CDATA[<p>A list made of functions. Not a list containing functions, and not a function that creates lists. A list that <em>is</em> functions. That probably doesn&rsquo;t make any sense, so let&rsquo;s jump straight into the code&hellip;</p>

<p>``` python
def make_node(head, tail=None):
  def node(request):</p>

<pre><code>if request == "head":
  return head
elif request == "tail":
  return tail
</code></pre>

<p>  return node
```</p>

<p>Let&rsquo;s try it out&hellip;</p>

<p>``` python
numbers = make_node(1, make_node(2, make_node(3)))</p>

<p>numbers(&ldquo;head&rdquo;)                  # => 1
numbers(&ldquo;tail&rdquo;)(&ldquo;head&rdquo;)          # => 2
numbers(&ldquo;tail&rdquo;)(&ldquo;tail&rdquo;)(&ldquo;head&rdquo;)  # => 3
```</p>

<p>``` python
def print_list(node):
  while node:</p>

<pre><code>print(node(GET_VALUE))
node = node(GET_NEXT_NODE)
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
</feed>
